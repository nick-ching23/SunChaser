syntax = "proto3";

package scheduler;

service SchedulerService {
  rpc ProcessTask(TaskRequest) returns (TaskResponse);

  rpc ReportStatus(StatusRequest) returns (StatusResponse);
}

message TaskRequest {
  int32 id = 1;               // Unique Task ID
  int32 batch = 2;             // Batch size
  float start = 3;             // Start position of the dataset
  float end = 4;               // End position of the dataset
  bool partitioned = 5;        // Whether dataset is partitioned
  double time = 6;             // Timestamp of task creation
  bool last = 7;               // Whether this is the last batch
}

message TaskResponse {
  string message = 1;  // Confirmation message
  bool success = 2;    // Whether the task was successfully received
}

message StatusRequest {
  string worker_name = 1;         // Unique name or ID of the worker
  string status = 2;              // Status (e.g., "completed", "failed")
  int32 id = 3;                  // Unique Task ID
  bool last = 4;                  // Whether this is the last batch
  double begin_time = 5;          // Start time 
  double end_time = 6;            // End time 
  map<string, string> runtime_info = 7; // Additional runtime stats (e.g., CPU usage, memory)
}

message StatusResponse {
  string message = 1;
}
